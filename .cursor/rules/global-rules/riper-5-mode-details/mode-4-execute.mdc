---
description: "Contains detailed rules for the EXECUTE phase of the RIPER-5 protocol."
globs: 
alwaysApply: false
---

### Mode 4: EXECUTE
<a id="mode-4-execute"></a>

**Purpose**: Strictly implement the plan from Mode 3

**Core Thinking Application**:
- Focus on precise implementation of specifications
- Apply system validation during implementation
- Maintain exact adherence to the plan
- Implement full functionality, including proper error handling

**Allowed**:
- Implementing *only* what is explicitly detailed in the approved plan
- Strictly following the numbered checklist
- Marking completed checklist items
- Making **minor deviation corrections** (see below) during implementation and reporting them clearly
- Updating the 'Task Progress' section in `Task-Plan-Management.md` within the `current_task_path` after implementation (this is a standard part of the execution process, treated as a built-in step of the plan)

**Forbidden**:
- **Any unreported** deviation from the plan
- Improvements or feature additions not specified in the plan
- Major logical or structural changes (must return to PLAN mode)
- Skipping or simplifying code sections

**Execution Protocol Steps**:
1. Strictly implement changes according to the plan (checklist items) found in the 'Implementation Checklist' section of `Task-Analysis-Solution-Plan.md` within the `current_task_path`.
2. **Minor Deviation Handling**: If, while executing a step, a minor correction is found necessary for the correct completion of that step but was not explicitly stated in the plan (e.g., correcting a variable name typo from the plan, adding an obvious null check), **it must be reported before execution**:
   ```
   [MODE: EXECUTE] Executing checklist item [X].
   Minor issue identified: [Clearly describe the issue, e.g., "Variable 'user_name' in the plan should be 'username' in the actual code"]
   Proposed correction: [Describe the correction, e.g., "Replacing 'user_name' with 'username' from the plan"]
   Will proceed with item [X] applying this correction.
   ```
   *Note: Any changes involving logic, algorithms, or architecture are NOT minor deviations and require returning to PLAN mode.*
3. After completing the implementation of a checklist item, **use file tools** to append the following information to the 'Task Progress' section of `Task-Plan-Management.md` within the `current_task_path` (this is a standard step of plan execution):
   ```
   *   [Timestamp generated via "Accurate Timestamp Generation" guideline]
       *   Step: [Checklist item number and description]
       *   Modifications: [List of file and code changes, including any reported minor deviation corrections]
       *   Change Summary: [Brief summary of this change]
       *   Reason: [Executing plan step [X]]
       *   Blockers: [Any issues encountered, or None]
       *   User Confirmation Status: [Pending Confirmation]
   ```
4. Request user confirmation and feedback: `Please review the changes for step [X]. Confirm the status (Success / Success with minor issues / Failure) and provide feedback if necessary.`
5. Based on user feedback:
   - **Failure or Success with minor issues to resolve**: Return to **PLAN** mode with user feedback. (The AI must ensure the `current_task_path` is maintained to continue working on the same task).
   - **Success**: If the checklist has unfinished items, proceed to the next item; if all items are complete, enter **REVIEW** mode.

**Code Quality Standards**:
- Always show full code context
- Specify language and path in code blocks
- Proper error handling
- Standardized naming conventions
- Clear and concise comments
- Format: ```language:file_path

**Output Format**:
Start with `[MODE: EXECUTE]`. The response MUST include:
1.  Confirmation of the `current_task_path` being used.
2.  The implementation code matching the plan (including minor deviation reports, if any).
3.  Marked completed checklist items (from the plan in `Task-Analysis-Solution-Plan.md`).
4.  The exact content that was/will be appended to the 'Task Progress' section of `Task-Plan-Management.md`.
5.  The user confirmation request.

Use markdown syntax for formatting answers.
